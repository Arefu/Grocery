/*
 * Foodstuffs API - Pak 'n Save & New World
 *
 * Foodstuffs API, providing access to Pak'nSave and New World stores without using their website or mobile app.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200Response
    /// </summary>
    [DataContract(Name = "_prod_mobile_ecomm_products_PNS__store_guid__search_q__term__post_200_response")]
    public partial class ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200Response" /> class.
        /// </summary>
        /// <param name="tobaccoFiltered">tobaccoFiltered.</param>
        /// <param name="totalHits">totalHits.</param>
        /// <param name="hitsPerPage">hitsPerPage.</param>
        /// <param name="numberOfPages">numberOfPages.</param>
        /// <param name="page">page.</param>
        /// <param name="products">products.</param>
        /// <param name="filters">filters.</param>
        public ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200Response(bool tobaccoFiltered = default(bool), int totalHits = default(int), int hitsPerPage = default(int), int numberOfPages = default(int), int page = default(int), List<ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200ResponseProductsInner> products = default(List<ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200ResponseProductsInner>), ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200ResponseFilters filters = default(ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200ResponseFilters))
        {
            this.TobaccoFiltered = tobaccoFiltered;
            this.TotalHits = totalHits;
            this.HitsPerPage = hitsPerPage;
            this.NumberOfPages = numberOfPages;
            this.Page = page;
            this.Products = products;
            this.Filters = filters;
        }

        /// <summary>
        /// Gets or Sets TobaccoFiltered
        /// </summary>
        [DataMember(Name = "tobaccoFiltered", EmitDefaultValue = true)]
        public bool TobaccoFiltered { get; set; }

        /// <summary>
        /// Gets or Sets TotalHits
        /// </summary>
        [DataMember(Name = "totalHits", EmitDefaultValue = false)]
        public int TotalHits { get; set; }

        /// <summary>
        /// Gets or Sets HitsPerPage
        /// </summary>
        [DataMember(Name = "hitsPerPage", EmitDefaultValue = false)]
        public int HitsPerPage { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfPages
        /// </summary>
        [DataMember(Name = "numberOfPages", EmitDefaultValue = false)]
        public int NumberOfPages { get; set; }

        /// <summary>
        /// Gets or Sets Page
        /// </summary>
        [DataMember(Name = "page", EmitDefaultValue = false)]
        public int Page { get; set; }

        /// <summary>
        /// Gets or Sets Products
        /// </summary>
        [DataMember(Name = "products", EmitDefaultValue = false)]
        public List<ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200ResponseProductsInner> Products { get; set; }

        /// <summary>
        /// Gets or Sets Filters
        /// </summary>
        [DataMember(Name = "filters", EmitDefaultValue = false)]
        public ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200ResponseFilters Filters { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProdMobileEcommProductsPNSStoreGuidSearchQTermPost200Response {\n");
            sb.Append("  TobaccoFiltered: ").Append(TobaccoFiltered).Append("\n");
            sb.Append("  TotalHits: ").Append(TotalHits).Append("\n");
            sb.Append("  HitsPerPage: ").Append(HitsPerPage).Append("\n");
            sb.Append("  NumberOfPages: ").Append(NumberOfPages).Append("\n");
            sb.Append("  Page: ").Append(Page).Append("\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("  Filters: ").Append(Filters).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
